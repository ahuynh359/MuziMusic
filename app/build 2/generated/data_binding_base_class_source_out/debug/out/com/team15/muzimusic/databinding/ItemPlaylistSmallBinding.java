// Generated by view binder compiler. Do not edit!
package com.team15.muzimusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.team15.muzimusic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlaylistSmallBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgAvatar1;

  @NonNull
  public final ImageView imgAvatar2;

  @NonNull
  public final ImageView imgAvatar3;

  @NonNull
  public final ImageView imgAvatar4;

  @NonNull
  public final TextView tvPlaylistName;

  private ItemPlaylistSmallBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgAvatar1,
      @NonNull ImageView imgAvatar2, @NonNull ImageView imgAvatar3, @NonNull ImageView imgAvatar4,
      @NonNull TextView tvPlaylistName) {
    this.rootView = rootView;
    this.imgAvatar1 = imgAvatar1;
    this.imgAvatar2 = imgAvatar2;
    this.imgAvatar3 = imgAvatar3;
    this.imgAvatar4 = imgAvatar4;
    this.tvPlaylistName = tvPlaylistName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlaylistSmallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlaylistSmallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_playlist_small, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlaylistSmallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgAvatar1;
      ImageView imgAvatar1 = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatar1 == null) {
        break missingId;
      }

      id = R.id.imgAvatar2;
      ImageView imgAvatar2 = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatar2 == null) {
        break missingId;
      }

      id = R.id.imgAvatar3;
      ImageView imgAvatar3 = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatar3 == null) {
        break missingId;
      }

      id = R.id.imgAvatar4;
      ImageView imgAvatar4 = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatar4 == null) {
        break missingId;
      }

      id = R.id.tvPlaylistName;
      TextView tvPlaylistName = ViewBindings.findChildViewById(rootView, id);
      if (tvPlaylistName == null) {
        break missingId;
      }

      return new ItemPlaylistSmallBinding((LinearLayout) rootView, imgAvatar1, imgAvatar2,
          imgAvatar3, imgAvatar4, tvPlaylistName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
