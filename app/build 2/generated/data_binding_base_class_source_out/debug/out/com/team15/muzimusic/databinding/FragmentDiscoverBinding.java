// Generated by view binder compiler. Do not edit!
package com.team15.muzimusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.team15.muzimusic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDiscoverBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final RecyclerView recyclerFollowSong;

  @NonNull
  public final RecyclerView recyclerNewSong;

  @NonNull
  public final RecyclerView recyclerPlaylist;

  @NonNull
  public final RecyclerView recyclerTopSinger;

  @NonNull
  public final RecyclerView recyclerTopSong;

  @NonNull
  public final RecyclerView recyclerTypes;

  @NonNull
  public final ShimmerFrameLayout shimmerFollowSong;

  @NonNull
  public final ShimmerFrameLayout shimmerNewSong;

  @NonNull
  public final ShimmerFrameLayout shimmerPlaylist;

  @NonNull
  public final ShimmerFrameLayout shimmerTopSinger;

  @NonNull
  public final ShimmerFrameLayout shimmerTopSong;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  private FragmentDiscoverBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull RecyclerView recyclerFollowSong, @NonNull RecyclerView recyclerNewSong,
      @NonNull RecyclerView recyclerPlaylist, @NonNull RecyclerView recyclerTopSinger,
      @NonNull RecyclerView recyclerTopSong, @NonNull RecyclerView recyclerTypes,
      @NonNull ShimmerFrameLayout shimmerFollowSong, @NonNull ShimmerFrameLayout shimmerNewSong,
      @NonNull ShimmerFrameLayout shimmerPlaylist, @NonNull ShimmerFrameLayout shimmerTopSinger,
      @NonNull ShimmerFrameLayout shimmerTopSong, @NonNull SwipeRefreshLayout swipeRefresh) {
    this.rootView = rootView;
    this.recyclerFollowSong = recyclerFollowSong;
    this.recyclerNewSong = recyclerNewSong;
    this.recyclerPlaylist = recyclerPlaylist;
    this.recyclerTopSinger = recyclerTopSinger;
    this.recyclerTopSong = recyclerTopSong;
    this.recyclerTypes = recyclerTypes;
    this.shimmerFollowSong = shimmerFollowSong;
    this.shimmerNewSong = shimmerNewSong;
    this.shimmerPlaylist = shimmerPlaylist;
    this.shimmerTopSinger = shimmerTopSinger;
    this.shimmerTopSong = shimmerTopSong;
    this.swipeRefresh = swipeRefresh;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDiscoverBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDiscoverBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_discover, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDiscoverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerFollowSong;
      RecyclerView recyclerFollowSong = ViewBindings.findChildViewById(rootView, id);
      if (recyclerFollowSong == null) {
        break missingId;
      }

      id = R.id.recyclerNewSong;
      RecyclerView recyclerNewSong = ViewBindings.findChildViewById(rootView, id);
      if (recyclerNewSong == null) {
        break missingId;
      }

      id = R.id.recyclerPlaylist;
      RecyclerView recyclerPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (recyclerPlaylist == null) {
        break missingId;
      }

      id = R.id.recyclerTopSinger;
      RecyclerView recyclerTopSinger = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTopSinger == null) {
        break missingId;
      }

      id = R.id.recyclerTopSong;
      RecyclerView recyclerTopSong = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTopSong == null) {
        break missingId;
      }

      id = R.id.recyclerTypes;
      RecyclerView recyclerTypes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTypes == null) {
        break missingId;
      }

      id = R.id.shimmerFollowSong;
      ShimmerFrameLayout shimmerFollowSong = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFollowSong == null) {
        break missingId;
      }

      id = R.id.shimmerNewSong;
      ShimmerFrameLayout shimmerNewSong = ViewBindings.findChildViewById(rootView, id);
      if (shimmerNewSong == null) {
        break missingId;
      }

      id = R.id.shimmerPlaylist;
      ShimmerFrameLayout shimmerPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (shimmerPlaylist == null) {
        break missingId;
      }

      id = R.id.shimmerTopSinger;
      ShimmerFrameLayout shimmerTopSinger = ViewBindings.findChildViewById(rootView, id);
      if (shimmerTopSinger == null) {
        break missingId;
      }

      id = R.id.shimmerTopSong;
      ShimmerFrameLayout shimmerTopSong = ViewBindings.findChildViewById(rootView, id);
      if (shimmerTopSong == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeRefresh = (SwipeRefreshLayout) rootView;

      return new FragmentDiscoverBinding((SwipeRefreshLayout) rootView, recyclerFollowSong,
          recyclerNewSong, recyclerPlaylist, recyclerTopSinger, recyclerTopSong, recyclerTypes,
          shimmerFollowSong, shimmerNewSong, shimmerPlaylist, shimmerTopSinger, shimmerTopSong,
          swipeRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
