// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.di;

import com.team15.muzimusic.data.database.AppDB;
import com.team15.muzimusic.data.database.daos.AccountDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideAccountDaoFactory implements Factory<AccountDAO> {
  private final Provider<AppDB> appDBProvider;

  public DatabaseModule_ProvideAccountDaoFactory(Provider<AppDB> appDBProvider) {
    this.appDBProvider = appDBProvider;
  }

  @Override
  public AccountDAO get() {
    return provideAccountDao(appDBProvider.get());
  }

  public static DatabaseModule_ProvideAccountDaoFactory create(Provider<AppDB> appDBProvider) {
    return new DatabaseModule_ProvideAccountDaoFactory(appDBProvider);
  }

  public static AccountDAO provideAccountDao(AppDB appDB) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAccountDao(appDB));
  }
}
