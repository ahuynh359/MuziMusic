// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import retrofit2.converter.moshi.MoshiConverterFactory;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideMoshiConverterFactoryFactory implements Factory<MoshiConverterFactory> {
  @Override
  public MoshiConverterFactory get() {
    return provideMoshiConverterFactory();
  }

  public static NetworkModule_ProvideMoshiConverterFactoryFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static MoshiConverterFactory provideMoshiConverterFactory() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideMoshiConverterFactory());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideMoshiConverterFactoryFactory INSTANCE = new NetworkModule_ProvideMoshiConverterFactoryFactory();
  }
}
