// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.di;

import android.content.Context;
import com.team15.muzimusic.data.database.AppDB;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideAppDBFactory implements Factory<AppDB> {
  private final Provider<Context> appContextProvider;

  public DatabaseModule_ProvideAppDBFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public AppDB get() {
    return provideAppDB(appContextProvider.get());
  }

  public static DatabaseModule_ProvideAppDBFactory create(Provider<Context> appContextProvider) {
    return new DatabaseModule_ProvideAppDBFactory(appContextProvider);
  }

  public static AppDB provideAppDB(Context appContext) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAppDB(appContext));
  }
}
