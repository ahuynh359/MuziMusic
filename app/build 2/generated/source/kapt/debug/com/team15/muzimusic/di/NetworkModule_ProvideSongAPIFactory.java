// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.di;

import com.team15.muzimusic.data.apis.SongAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideSongAPIFactory implements Factory<SongAPI> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideSongAPIFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SongAPI get() {
    return provideSongAPI(retrofitProvider.get());
  }

  public static NetworkModule_ProvideSongAPIFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideSongAPIFactory(retrofitProvider);
  }

  public static SongAPI provideSongAPI(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideSongAPI(retrofit));
  }
}
