// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.data.services.song;

import com.team15.muzimusic.data.database.daos.AccountDAO;
import com.team15.muzimusic.data.database.daos.AlbumDao;
import com.team15.muzimusic.data.database.daos.SongDAO;
import com.team15.muzimusic.data.database.daos.TypeDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SongLocalService_Factory implements Factory<SongLocalService> {
  private final Provider<SongDAO> songDAOProvider;

  private final Provider<AccountDAO> accountDAOProvider;

  private final Provider<TypeDao> typeDaoProvider;

  private final Provider<AlbumDao> albumDaoProvider;

  public SongLocalService_Factory(Provider<SongDAO> songDAOProvider,
      Provider<AccountDAO> accountDAOProvider, Provider<TypeDao> typeDaoProvider,
      Provider<AlbumDao> albumDaoProvider) {
    this.songDAOProvider = songDAOProvider;
    this.accountDAOProvider = accountDAOProvider;
    this.typeDaoProvider = typeDaoProvider;
    this.albumDaoProvider = albumDaoProvider;
  }

  @Override
  public SongLocalService get() {
    return newInstance(songDAOProvider.get(), accountDAOProvider.get(), typeDaoProvider.get(), albumDaoProvider.get());
  }

  public static SongLocalService_Factory create(Provider<SongDAO> songDAOProvider,
      Provider<AccountDAO> accountDAOProvider, Provider<TypeDao> typeDaoProvider,
      Provider<AlbumDao> albumDaoProvider) {
    return new SongLocalService_Factory(songDAOProvider, accountDAOProvider, typeDaoProvider, albumDaoProvider);
  }

  public static SongLocalService newInstance(SongDAO songDAO, AccountDAO accountDAO,
      TypeDao typeDao, AlbumDao albumDao) {
    return new SongLocalService(songDAO, accountDAO, typeDao, albumDao);
  }
}
