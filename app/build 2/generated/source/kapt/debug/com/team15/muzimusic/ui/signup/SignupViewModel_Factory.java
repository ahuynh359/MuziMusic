// Generated by Dagger (https://dagger.dev).
package com.team15.muzimusic.ui.signup;

import com.team15.muzimusic.common.AppSharedPreferences;
import com.team15.muzimusic.data.repositories.AccountRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignupViewModel_Factory implements Factory<SignupViewModel> {
  private final Provider<AccountRepository> accountRepositoryProvider;

  private final Provider<AppSharedPreferences> appSharedPreferencesProvider;

  public SignupViewModel_Factory(Provider<AccountRepository> accountRepositoryProvider,
      Provider<AppSharedPreferences> appSharedPreferencesProvider) {
    this.accountRepositoryProvider = accountRepositoryProvider;
    this.appSharedPreferencesProvider = appSharedPreferencesProvider;
  }

  @Override
  public SignupViewModel get() {
    return newInstance(accountRepositoryProvider.get(), appSharedPreferencesProvider.get());
  }

  public static SignupViewModel_Factory create(
      Provider<AccountRepository> accountRepositoryProvider,
      Provider<AppSharedPreferences> appSharedPreferencesProvider) {
    return new SignupViewModel_Factory(accountRepositoryProvider, appSharedPreferencesProvider);
  }

  public static SignupViewModel newInstance(AccountRepository accountRepository,
      AppSharedPreferences appSharedPreferences) {
    return new SignupViewModel(accountRepository, appSharedPreferences);
  }
}
